{
	"id": 0,
	"name": "ts-lib",
	"kind": 0,
	"flags": {},
	"originalName": "",
	"children": [
		{
			"id": 1,
			"name": "double",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Doubles a number (by addition)",
				"text": "### E.g.\n```js\nimport { double } from 'typescript-starter'\nconsole.log(double(4))\n// => 8\n```\n",
				"returns": "Number `n` doubled.\n"
			},
			"signatures": [
				{
					"id": 2,
					"name": "double",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Doubles a number (by addition)",
						"text": "### E.g.\n```js\nimport { double } from 'typescript-starter'\nconsole.log(double(4))\n// => 8\n```\n",
						"returns": "Number `n` doubled.\n"
					},
					"parameters": [
						{
							"id": 3,
							"name": "n",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "Arbitrary number"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "lib/number.ts",
					"line": 14,
					"character": 19
				}
			]
		},
		{
			"id": 4,
			"name": "power",
			"kind": 64,
			"kindString": "Function",
			"flags": {
				"isExported": true,
				"isConst": true
			},
			"comment": {
				"shortText": "Raise the value of the first parameter to the power of the second using the\nes7 exponentiation operator (`**`).",
				"text": "### Example (es module)\n```js\nimport { power } from 'typescript-starter'\nconsole.log(power(2,3))\n// => 8\n```\n\n### Example (commonjs)\n```js\nvar power = require('typescript-starter').power;\nconsole.log(power(2,3))\n// => 8\n```"
			},
			"signatures": [
				{
					"id": 5,
					"name": "power",
					"kind": 4096,
					"kindString": "Call signature",
					"flags": {
						"isExported": true
					},
					"comment": {
						"shortText": "Raise the value of the first parameter to the power of the second using the\nes7 exponentiation operator (`**`).",
						"text": "### Example (es module)\n```js\nimport { power } from 'typescript-starter'\nconsole.log(power(2,3))\n// => 8\n```\n\n### Example (commonjs)\n```js\nvar power = require('typescript-starter').power;\nconsole.log(power(2,3))\n// => 8\n```"
					},
					"parameters": [
						{
							"id": 6,
							"name": "base",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the base to exponentiate"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						},
						{
							"id": 7,
							"name": "exponent",
							"kind": 32768,
							"kindString": "Parameter",
							"flags": {
								"isExported": true
							},
							"comment": {
								"shortText": "the power to which to raise the base\n"
							},
							"type": {
								"type": "intrinsic",
								"name": "number"
							}
						}
					],
					"type": {
						"type": "intrinsic",
						"name": "number"
					}
				}
			],
			"sources": [
				{
					"fileName": "lib/number.ts",
					"line": 36,
					"character": 18
				}
			]
		}
	],
	"groups": [
		{
			"title": "Functions",
			"kind": 64,
			"children": [
				1,
				4
			]
		}
	]
}